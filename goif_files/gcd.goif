%%%
% gcd.goif
% This code calculates the greatest common denominator of two user-inputted numbers
%%%

GCD:
 %%%
 % This calculates the common denominator using Euclid's algorithm.
 % args:
 % 1: NUMBER - the first number 
 % 2: NUMBER - the second number 
 % 
 % returns:
 % 1: NUMBER - the greatest common denominator
 %%%

 GCD.LOOP1:
  GOIF GCD.LOOP1.END arg2 == 0
  arg1 INTO temp
  arg2 INTO arg1
  temp \ arg2 INTO arg2 
  GO GCD.LOOP1
 GCD.LOOP1.END:
 RETURN (arg1)

MAIN:
 GOIF MAIN.STARTNOARGS @arg2
  JUMP STD:TO_NUM (arg1)
  ret1 INTO num1

  JUMP STD:TO_NUM (arg2)
  ret1 INTO num2

  GO MAIN.ENDNOARGS
 MAIN.STARTNOARGS:
  MAIN.LOOP1:
   "Give the first number: " INTO STDOUT
   JUMP STD:TO_NUM (STDIN) HANDLE BAD_STR MAIN.LOOP1.HANDLE1.BAD_STR
   ret1 INTO num1
   GO MAIN.LOOP1.END
   MAIN.LOOP1.HANDLE1.BAD_STR:
    "Invalid number.  Try again.\n" INTO STDOUT
    GO MAIN.LOOP1
  MAIN.LOOP1.END: 

  MAIN.LOOP2:
   "Give the second number: " INTO STDOUT
   JUMP STD:TO_NUM (STDIN) HANDLE BAD_STR MAIN.LOOP2.HANDLE1.BAD_STR
   ret1 INTO num2
   GO MAIN.LOOP2.END
   MAIN.LOOP2.HANDLE1.BAD_STR:
    "Invalid number.  Try again.\n" INTO STDOUT
    GO MAIN.LOOP2
  MAIN.LOOP2.END:
 MAIN.ENDNOARGS:

 JUMP GCD (num1, num2)
 JUMP STD:TO_STRING (ret1)

 "The Greatest Common Denominator is " ^ ret1 ^ ".\n" INTO STDOUT
 RETURN  % This pops off of an empty call stack, ending the program.